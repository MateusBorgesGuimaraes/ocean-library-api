@baseUrl = http://localhost:3000
@authToken = {{authenticate.response.body.accessToken}}

# USER

### Exibe todos os usuarios
GET {{baseUrl}}/users
Authorization: Bearer {{authToken}} 

### Exibe um usuario pelo id
GET {{baseUrl}}/users/11
Authorization: Bearer {{authToken}}

### Pesquisa um usuario pelo email
GET {{baseUrl}}/users/search/email?email=ru
Authorization: Bearer {{authToken}}

### Cria um usuario
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "shinji",
  "email": "shinji@example.com",
  "password": "senha123"
}

# NEWS

### Exibe todas as noticias
GET {{baseUrl}}/news?page=1&limit=1

### Exibe uma noticia pelo id
GET {{baseUrl}}/news/9

### Cria uma noticia
POST {{baseUrl}}/news
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "Local Community Event Highlights hbgfj",
  "content": "Recap of the annual community festival, showcasing local talents and cultural diversity.",
  "tags": ["community", "local-events", "culture"],
  "isActive": true
}

### Atualiza uma noticia
PATCH  {{baseUrl}}/news/9
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "Local Community Event Highlights edit",
  "content": "Recap of the annual community festival, showcasing local talents and cultural diversity.",
  "tags": ["community", "local-events", "culture"],
  "isActive": true
}

### Upload da cover Image da noticia
POST {{baseUrl}}/news/upload-cover-image/9
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----BoundaryDelimitadorHttp

------BoundaryDelimitadorHttp
Content-Disposition: form-data; name="file"; filename="abc.jpg"
Content-Type: image/jpeg

< ./dev/images/news-4.jpg
------BoundaryDelimitadorHttp--

### Ver capa
GET {{baseUrl}}/pictures/news-9.jpg

### Deleta uma noticia
DELETE {{baseUrl}}/news/10
Authorization: Bearer {{authToken}}

### Pesquisa as noticias pelo titulo
GET {{baseUrl}}/news/search/title?title=Local
Authorization: Bearer {{authToken}}





# CATEGORY

### Exibe todas as categorias
GET {{baseUrl}}/category
Authorization: Bearer {{authToken}}

### Exibe uma categoria pelo id
GET {{baseUrl}}/category/12

### Cria uma categoria
POST {{baseUrl}}/category
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "name": "scfdsfifdhdfsf-fi"
}

### Atualiza uma categoria
PATCH {{baseUrl}}/category/15
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "name": "sci-fi"
}

### Deleta uma categoria
DELETE {{baseUrl}}/category/19
Authorization: Bearer {{authToken}}










# BOOK

### Exibe um livro pelo id
GET {{baseUrl}}/books/7

### Pega os ultimos 8 livros adicionados
GET {{baseUrl}}/books/latest

### Cria um livro
POST {{baseUrl}}/books
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "The Art of War for test",
  "author": "Sun Tzu",
  "publisher": "Simon & Schuster",
  "year": -500,
  "isbn": "978-1590302255",
  "synopsis": "An ancient Chinese military treatise that provides guidance on military strategy and tactics, which has influenced both military and business thinking.",
  "availability": true,
  "quantity": 12,
  "category": 13
}

### Upload da capa do livro
POST {{baseUrl}}/books/upload-cover/7
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----BoundaryDelimitadorHttp

------BoundaryDelimitadorHttp
Content-Disposition: form-data; name="file"; filename="abc.jpg"
Content-Type: image/jpeg

< ./dev/images/cover-9.jpg
------BoundaryDelimitadorHttp--

### Ver capa
GET {{baseUrl}}/pictures/book-7.jpg


### Atualiza um livro
PATCH  {{baseUrl}}/books/8
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "The Art of War for test att"
}

### Deleta um livro
DELETE {{baseUrl}}/books/8
Authorization: Bearer {{authToken}}

### Pesquisar um livro
GET {{baseUrl}}/books/search


# EVENTS

### Exibe todos os eventos
GET {{baseUrl}}/library-events

### Exibe um evento pelo id
GET {{baseUrl}}/library-events/8

### Cria um evento
POST {{baseUrl}}/library-events
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "fsdfsf hghf",
  "description": "Test event with empty title",
  "date": "2024-07-15T14:00:00Z",
  "location": "Main Library",
  "banner": "test.jpg",
  "seats": 30
}

### Atualiza um evento
PATCH  {{baseUrl}}/library-events/8
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "Digital Research Workshop"
}

### Upload do banner de um evento
POST {{baseUrl}}/library-events/upload-banner/1
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----BoundaryDelimitadorHttp

------BoundaryDelimitadorHttp
Content-Disposition: form-data; name="file"; filename="abc.jpg"
Content-Type: image/jpeg

< ./dev/images/event-2.jpg
------BoundaryDelimitadorHttp--

### Ver capa
GET {{baseUrl}}/pictures/event-1.jpg

### Deleta um evento
DELETE {{baseUrl}}/library-events/8
Authorization: Bearer {{authToken}}

### Registra um usuario para um evento
POST {{baseUrl}}/library-events/3/register
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "userId": 12
}

### Ve os registros no evento
GET {{baseUrl}}/library-events/3/registrations
Authorization: Bearer {{authToken}}

### Ve todos o eventos que o usuario esta cadastrado
GET {{baseUrl}}/library-events/user/12/events
Authorization: Bearer {{authToken}}

### Cancela o registro
DELETE {{baseUrl}}/library-events/3/registrations/12
Authorization: Bearer {{authToken}}

### Pesquisa os evento pelo titulo
GET {{baseUrl}}/library-events/search/title?title=Digital
Authorization: Bearer {{authToken}}


# REQUEST

### Exibe todos os requests
GET {{baseUrl}}/requests
Authorization: Bearer {{authToken}}

### Cria um request
POST {{baseUrl}}/requests
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "The Great Gatsby2",
  "author": "F. Scott Fitzgerald2",
  "publisher": "Scribner2",
  "year": 1925,
  "genre": "Classic Fiction2"
}

### Deleta um request
DELETE {{baseUrl}}/requests/4
Authorization: Bearer {{authToken}}


# LOAN

### Cria um loan
POST {{baseUrl}}/loans
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "userId": 20,
  "bookId": 2
}

### Pega o loan por id
GET {{baseUrl}}/loans/8
Authorization: Bearer {{authToken}}

### Pega todos os loan 
GET {{baseUrl}}/loans/findAll/?status=returned
Authorization: Bearer {{authToken}}

### Pega o livro
PUT {{baseUrl}}/loans/8/pickup
Authorization: Bearer {{authToken}}

### Renova o emprestimo
PUT {{baseUrl}}/loans/8/renew
Authorization: Bearer {{authToken}}

### Retorna o livro
PUT {{baseUrl}}/loans/8/return
Authorization: Bearer {{authToken}}

### Pega todos os emprestimos do usuario 
GET {{baseUrl}}/loans/user/20
Authorization: Bearer {{authToken}}

### Pega todos os emprestimos do usuario por email
GET {{baseUrl}}/loans/search/email?email=orihime@example.com
Authorization: Bearer {{authToken}}

### Pega as estatisticas dos esmprestimos
GET {{baseUrl}}/loans/statistics
Authorization: Bearer {{authToken}}

### Pega o livro diretamente na biblioteca
GET {{baseUrl}}/loans/directly/3/21
Authorization: Bearer {{authToken}}



# AUTH

### Loga um usuario
# @name authenticate
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "senha123"
}
